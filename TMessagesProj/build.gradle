apply plugin: 'com.android.application'

repositories {
    mavenCentral()
    google()
    jcenter()
}

configurations {
    compile.exclude module: 'support-v4'
}

configurations.all {
    exclude group: 'com.google.firebase', module: 'firebase-core'
}

dependencies {
    implementation 'androidx.core:core:1.3.2'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.1'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "androidx.sharetarget:sharetarget:1.0.0"

    compileOnly 'org.checkerframework:checker-qual:2.5.2'
    compileOnly 'org.checkerframework:checker-compat-qual:2.5.0'
    implementation 'com.google.firebase:firebase-messaging:20.3.0'
    implementation 'com.google.firebase:firebase-datatransport:17.0.8'
    implementation 'com.google.firebase:firebase-appindexing:19.1.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-auth:18.1.0'
    implementation 'com.google.android.gms:play-services-vision:16.2.0'
    implementation 'com.google.android.gms:play-services-wearable:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.1.0'
    implementation 'com.google.android.gms:play-services-wallet:18.1.2'
    implementation 'com.googlecode.mp4parser:isoparser:1.0.6'
    implementation 'com.stripe:stripe-android:2.0.2'
    implementation files('libs/libgsaverification-client.aar')
    implementation "com.microsoft.appcenter:appcenter-analytics:3.3.1"
    implementation "com.microsoft.appcenter:appcenter-distribute:3.3.1"
    implementation 'com.android.billingclient:billing:3.0.1'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.10'
}

ext.abiCodes = ['armeabi-v7a':1, 'arm64-v8a':5, x86:2, x86_64:6, 'universal':0]

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'
    ndkVersion "21.3.6528147"

    defaultConfig.applicationId = "tw.nekomimi.nekogram"

    sourceSets.main.jniLibs.srcDirs = ['./jni/']

    externalNativeBuild {
        cmake {
            path 'jni/CMakeLists.txt'
        }
    }

    lintOptions {
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
        disable 'BlockedPrivateApi'
    }

    dexOptions {
        jumboMode = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

        coreLibraryDesugaringEnabled true
    }

    signingConfigs {
        def keystorePwd = null
        def alias = null
        def pwd = null
        if (project.rootProject.file('local.properties').exists()) {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            keystorePwd = properties.getProperty("RELEASE_STORE_PASSWORD")
            alias = properties.getProperty("RELEASE_KEY_ALIAS")
            pwd = properties.getProperty("RELEASE_KEY_PASSWORD")
        }
        release {
            storeFile file("config/release.keystore")
            storePassword keystorePwd != null ? keystorePwd : System.getenv("KEYSTORE_PASS")
            keyAlias alias != null ? alias : System.getenv("ALIAS_NAME")
            keyPassword pwd != null ? pwd : System.getenv("ALIAS_PASS")
        }
        debug {
            storeFile file("config/release.keystore")
            storePassword keystorePwd != null ? keystorePwd : System.getenv("KEYSTORE_PASS")
            keyAlias alias != null ? alias : System.getenv("ALIAS_NAME")
            keyPassword pwd != null ? pwd : System.getenv("ALIAS_PASS")
        }
    }


    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            signingConfig signingConfigs.debug
            applicationIdSuffix ".beta"
            minifyEnabled false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets.debug {
        manifest.srcFile 'config/debug/AndroidManifest_SDK23.xml'
    }

    sourceSets.release {
        manifest.srcFile 'config/release/AndroidManifest_SDK23.xml'
    }

    defaultConfig.versionCode = 2139

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            //noinspection GrDeprecatedAPIUsage
            def abi = output.getFilter(com.android.build.OutputFile.ABI)
            if (abi == null) abi = 'universal'
            outputFileName = "Nekogram-${defaultConfig.versionName}-${defaultConfig.versionCode}-${abi}.apk"
            def abiVersionCode = project.ext.abiCodes.get(abi)
            output.versionCodeOverride = defaultConfig.versionCode * 10 + abiVersionCode
        }
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionName "7.2.1"

        vectorDrawables.generatedDensities = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi']

        externalNativeBuild {
            cmake {
                version '3.10.2'
                arguments '-DANDROID_STL=c++_static', '-DANDROID_PLATFORM=android-16', "-j=16"
            }
        }
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    splits.abi {
        enable true
        universalApk true
    }
}

apply plugin: 'com.google.gms.google-services'
